#!/bin/bash

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# - - - - - - - - - - - - - - - - - - - -
# Zinit Configuration
# - - - - - - - - - - - - - - - - - - - -

declare -A ZINIT
ZINIT[HOME_DIR]="$XDG_CONFIG_HOME"/zinit
ZINIT[BIN_DIR]="$ZINIT[HOME_DIR]"/bin
ZINIT[PLUGINS_DIR]="$ZINIT[HOME_DIR]"/plugins
ZINIT[COMPLETIONS_DIR]="$ZINIT[HOME_DIR]"/completions
ZINIT[SNIPPETS_DIR]="$ZINIT[HOME_DIR]"/snippets
ZINIT[ZCOMPDUMP_PATH]="$XDG_CACHE_HOME"/.zcompdump
ZINIT[COMPINIT_OPTS]="-C"
ZPFX="$ZINIT[HOME_DIR]"/polaris
__ZINIT="${ZINIT[BIN_DIR]}/zinit.zsh"

### Add zinit module
if [[ -f "${ZINIT[BIN_DIR]}/zmodules/Src/zdharma/zplugin.so" ]]; then
  module_path+=( "${ZINIT[BIN_DIR]}/zmodules/Src" )
      zmodload zdharma-continuum/zplugin
fi

### Added by Zinit's installer
if [[ ! -f ${ZINIT[BIN_DIR]}/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "${ZINIT[BIN_DIR]}" && command chmod g-rwX "${ZINIT[BIN_DIR]}"
    command git clone https://github.com/zdharma-continuum/zinit "${ZINIT[BIN_DIR]}" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

. "$__ZINIT"
autoload -Uz _zinit
autoload "$ZDOTDIR"/funcs/*
(( ${+_comps} )) && _comps[zinit]=_zinit

# - - - - - - - - - - - - - - - - - - - -
# Theme
# - - - - - - - - - - - - - - - - - - - -

setopt promptsubst

POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_last
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
POWERLEVEL9K_SHORTEN_DELIMITER=""
zinit depth=1 lucid nocd \
      atload"source $ZDOTDIR/p10k.zsh; _p9k_precmd" for romkatv/powerlevel10k

# - - - - - - - - - - - - - - - - - - - -
# Meta Plugins
# - - - - - - - - - - - - - - - - - - - -

zinit load wfxr/forgit
zinit lucid atload'_zsh_autosuggest_start;' for zsh-users/zsh-autosuggestions
zinit lucid atinit'ZINIT[COMPINIT_OPTS]=-C; zpcompinit; zpcdreplay;' for zdharma-continuum/fast-syntax-highlighting
zi for \
    atload"zicompinit; zicdreplay" \
    blockf \
    lucid \
    wait \
  zsh-users/zsh-completions
zinit lucid bindmap'^R -> ^F' atinit'zstyle :history-search-multi-word page-size 7;' for zdharma-continuum/history-search-multi-word
zinit light zdharma-continuum/zinit-annex-bin-gem-node

# zinit for b4b4r07/emoji-cli

zinit autoload'#manydots-magic' for knu/zsh-manydots-magic

# zinit lucid for marlonrichert/zsh-autocomplete
zinit lucid for zsh-users/zsh-history-substring-search

zinit snippet OMZ::lib/completion.zsh
export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>|'

# - - - - - - - - - - - - - - - - - - - -
# Tools
# - - - - - - - - - - - - - - - - - - - -

zinit from"gh-r" as"program" mv"direnv* -> direnv" \
    atclone'./direnv hook zsh > zhook.zsh' atpull'%atclone' \
    pick"direnv" src="zhook.zsh" for \
        direnv/direnv

# All of the above using the for-syntax and also z-a-bin-gem-node annex
zinit wait"1" lucid from"gh-r" for \
     sbin"fzf"          junegunn/fzf-bin \
     mv"**/fd -> fd" sbin"fd"     @sharkdp/fd \
     mv"**/bat -> bat" sbin"bat"  @sharkdp/bat \
     mv"**/eza -> eza" sbin"eza"  eza-community/eza


zinit ice as"program" pick"yank" make
zinit light mptre/yank

# fzf-marks
zinit ice wait lucid
zinit load urbainvaes/fzf-marks

zinit ice wait lucid
zinit load hlissner/zsh-autopair

zinit ice wait lucid
zinit load redxtech/zsh-asdf-direnv

### asdf-vm
zinit lucid as"null" \
    from"github" src"asdf.sh" as"program" for \
    @asdf-vm/asdf

# Source plugin specific scripts

# zinit wait lucid has"java" has"asdf" \
#       if"[ -f $ASDF_DATA_DIR/plugins/java/set-java-home.zsh ]" \
#       atinit"source $ASDF_DATA_DIR/plugins/java/set-java-home.zsh" for \
#         id-as"asdf-vm/java-home" zdharma-continuum/null

# - - - - - - - - - - - - - - - - - - - -
# Completions
# - - - - - - - - - - - - - - - - - - - -
    # OMZP::ssh-agent \
    # OMZP::git-auto-fetch \
    # has"kubectl" \
      # OMZP::kubectl \
zinit wait lucid atload"zicompinit; zicdreplay" blockf for \
    has"docker" \
    as"completion" \
      OMZP::docker/_docker \
    OMZP::docker-compose \
    as"completion" \
      OMZP::docker-compose/_docker-compose \
    has"gradle" \
      OMZP::gradle


FPATH=$HOME/.zfunc:$FPATH
# Setup PATH
PATH="$PATH:$FORGIT_INSTALL_DIR/bin"
PATH=$ZDOTDIR/bin:$PATH
PATH=$HOME/go/bin:$PATH
# Append this so that system pipx gets used in toolbox containers
PATH=$PATH:$HOME/.local/bin
PATH=$PATH:$HOME/.local/share/JetBrains/Toolbox/scripts

if [[ $OSTYPE == darwin* ]]; then
  PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
fi

export PATH

source "$ZDOTDIR/aliases"
source "$ZDOTDIR/bindkeys"
source "$ZDOTDIR/history"
source "$ZDOTDIR/zstyles"
source "$ZDOTDIR/cdpath"

(( ! ${+functions[p10k]} )) || p10k finalize

### CHANGE TITLE OF TERMINALS
# zshaddhistory() { eval 'print -Pn "\e]0;$@\a"' }
case ${TERM} in
  xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|alacritty|st|konsole*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD/#$HOME/\~}\007"'
        ;;
  screen*)
    PROMPT_COMMAND='echo -ne "\033_${USER}@${HOST%%.*}:${PWD/#$HOME/\~}\033\\"'
    ;;
esac
myprmptcmd() {
  eval "$PROMPT_COMMAND" 
}
autoload -Uz add-zsh-hook
add-zsh-hook precmd myprmptcmd
export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>|'

which aws_completer >/dev/null 2>&1 && complete -C "$(which aws_completer)" aws

autoload bashcompinit && bashcompinit
autoload -Uz compinit
compinit
zinit cdreplay -q



# To customize prompt, run `p10k configure` or edit ~/.config/zsh/p10k.zsh.
[[ ! -f ~/.config/zsh/p10k.zsh ]] || source ~/.config/zsh/p10k.zsh

export TERM=xterm-256color
