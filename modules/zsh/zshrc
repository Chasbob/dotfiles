#!/bin/bash

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# - - - - - - - - - - - - - - - - - - - -
# Zinit Configuration
# - - - - - - - - - - - - - - - - - - - -

declare -A ZINIT
ZINIT[HOME_DIR]="$XDG_CONFIG_HOME"/zinit
ZINIT[BIN_DIR]="$ZINIT[HOME_DIR]"/bin
ZINIT[PLUGINS_DIR]="$ZINIT[HOME_DIR]"/plugins
ZINIT[COMPLETIONS_DIR]="$ZINIT[HOME_DIR]"/completions
ZINIT[SNIPPETS_DIR]="$ZINIT[HOME_DIR]"/snippets
ZINIT[ZCOMPDUMP_PATH]="$XDG_CACHE_HOME"/.zcompdump
ZINIT[COMPINIT_OPTS]="-C"
ZPFX="$ZINIT[HOME_DIR]"/polaris
__ZINIT="${ZINIT[BIN_DIR]}/zinit.zsh"

### Add zinit module
if [[ -f "${ZINIT[BIN_DIR]}/zmodules/Src/zdharma/zplugin.so" ]]; then
  module_path+=( "${ZINIT[BIN_DIR]}/zmodules/Src" )
      zmodload zdharma/zplugin
fi

### Added by Zinit's installer
if [[ ! -f ${ZINIT[BIN_DIR]}/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "${ZINIT[BIN_DIR]}" && command chmod g-rwX "${ZINIT[BIN_DIR]}"
    command git clone https://github.com/zdharma/zinit "${ZINIT[BIN_DIR]}" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

. "$__ZINIT"
autoload -Uz _zinit
autoload "$ZDOTDIR"/funcs/*
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
  zinit-zsh/z-a-bin-gem-node \
  zinit-zsh/z-a-meta-plugins \
  zinit-zsh/z-a-patch-dl



# - - - - - - - - - - - - - - - - - - - -
# Theme
# - - - - - - - - - - - - - - - - - - - -

setopt promptsubst

POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_last
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
POWERLEVEL9K_SHORTEN_DELIMITER=""
zinit depth=1 lucid nocd \
      atload"source $ZDOTDIR/p10k.zsh; _p9k_precmd" for romkatv/powerlevel10k

# - - - - - - - - - - - - - - - - - - - -
# Meta Plugins
# - - - - - - - - - - - - - - - - - - - -

zinit skip'fzy peco/peco' for fuzzy
zinit skip'jonas/tig dircolors-material' for console-tools
zinit for ext-git molovo
zinit for zsh-users
zinit bindmap'^R -> ^F' skip'zdharma/zsh-diff-so-fancy zdharma/fast-syntax-highlighting' for zdharma

zinit for b4b4r07/emoji-cli

zinit autoload'#manydots-magic' for knu/zsh-manydots-magic

# zinit lucid for marlonrichert/zsh-autocomplete
zinit lucid for zsh-users/zsh-history-substring-search

zinit snippet OMZ::lib/completion.zsh
complete -C '/usr/bin/aws_completer' aws

# - - - - - - - - - - - - - - - - - - - -
# Tools
# - - - - - - - - - - - - - - - - - - - -

### python poetry
zinit wait lucid for \
  reegnz/jq-zsh-plugin

zinit wait lucid from"gh-r" as"command" for \
  mv"delta* -> delta" sbin"delta/delta" dandavison/delta \
  mv"bin/tldr* -> tldr" sbin"tldr" mstruebing/tldr 
  # mv"direnv* -> direnv" sbin"direnv" src"zhook.zsh" \
  # atclone"./direnv hook zsh > zhook.zsh" atpull"%atclone" direnv/direnv

zinit from"gh-r" as"program" mv"direnv* -> direnv" \
    atclone'./direnv hook zsh > zhook.zsh' atpull'%atclone' \
    pick"direnv" src="zhook.zsh" for \
        direnv/direnv



### asdf-vm
zinit lucid as"null" \
    from"github" src"asdf.sh" as"program" for \
    @asdf-vm/asdf

# Source plugin specific scripts

zinit wait lucid has"java" \
      if"[ -f $ASDF_DATA_DIR/plugins/java/set-java-home.zsh ]" \
      atinit"source $ASDF_DATA_DIR/plugins/java/set-java-home.zsh" for \
        id-as"asdf-vm/java-home" zdharma/null

# - - - - - - - - - - - - - - - - - - - -
# Completions
# - - - - - - - - - - - - - - - - - - - -
    # OMZP::ssh-agent \
zinit wait lucid atload"zicompinit; zicdreplay" blockf for \
    as"completion" \
      OMZP::docker/_docker \
    has"kubectl" \
      OMZP::kubectl \
    OMZP::docker-compose \
    as"completion" \
      OMZP::docker-compose/_docker-compose \
    OMZP::docker-machine \
    as"completion" \
      OMZP::docker-machine/_docker-machine \
    OMZP::gradle \
    OMZP::colored-man-pages \
    as"completion" mv"completions/zsh/_exa -> _exa" id-as"ogham/exa-comp" \
      ogham/exa \
    as"completion" mv"autocomplete/zsh_autocomplete -> _step" id-as"smallstep/cli-comp" \
      smallstep/cli \
    as"completion" atclone"~/.poetry/bin/poetry completions zsh > _poetry" atpull"%atclone" id-as"poetry/completion" \
      zdharma/null

    # as"completion" mv"autocompletion/autocomplete.zsh -> _tldr" id-as"mstruebing/tldr-comp" \
      # mstruebing/tldr
# zinit add-fpath $HOME/.zfuncs

# FPATH=$HOME/.zfuncs:$FPATH
# Setup PATH
PATH=$HOME/.local/bin:$PATH
PATH=$HOME/.yarn/bin:$PATH
PATH=$HOME/.poetry/bin:$PATH
PATH=$HOME/.emacs.d/bin:$PATH
PATH=$HOME/go/bin:$PATH
PATH=$HOME/.SpaceVim/bin:$PATH
PATH=/usr/bin/vendor_perl:$PATH

if [[ $OSTYPE == darwin* ]]; then
  PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
fi

export PATH

# export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)

source "$ZDOTDIR/aliases"
source "$ZDOTDIR/bindkeys"
source "$ZDOTDIR/history"
source "$ZDOTDIR/zstyles"
source "$ZDOTDIR/cdpath"

(( ! ${+functions[p10k]} )) || p10k finalize

### CHANGE TITLE OF TERMINALS
# zshaddhistory() { eval 'print -Pn "\e]0;$@\a"' }
case ${TERM} in
  xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|alacritty|st|konsole*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD/#$HOME/\~}\007"'
        ;;
  screen*)
    PROMPT_COMMAND='echo -ne "\033_${USER}@${HOST%%.*}:${PWD/#$HOME/\~}\033\\"'
    ;;
esac
myprmptcmd() { eval "$PROMPT_COMMAND" }
autoload -Uz add-zsh-hook
add-zsh-hook precmd myprmptcmd
export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>|'
